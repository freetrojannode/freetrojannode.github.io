<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://freetrojannode.github.io/news/article-38057.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>如何保证Redis缓存和数据库一致性？</title>
        <meta name="description" content="首先我们先了解下缓存是什么？ 缓存就是把低速存储的结果，临时保存在高速存储的技术。 为什么使用redis进行缓存数据？ Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持" />
        <link rel="icon" href="/assets/website/img/freetrojannode/favicon.ico" type="image/x-icon"/>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Montserrat:300,400,500,700" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/freetrojannode/aos/aos.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/freetrojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/freetrojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/freetrojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/freetrojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/freetrojannode/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-41Z5LWRP31"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-41Z5LWRP31');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top d-flex align-items-center">
        <div class="container d-flex justify-content-between">
            <div class="logo">
                                <a href="/">
                    <span>Free Trojan Node</span>
                </a>
                            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- #header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>如何保证Redis缓存和数据库一致性？</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= About Section ======= -->
        <section id="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="TrojanNode免费节点官网" data-url="https://trojannode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><strong>首先我们先了解下缓存是什么？</strong><br /> 缓存就是把低速存储的结果，临时保存在高速存储的技术。</p> <p><strong>为什么使用redis进行缓存数据？</strong></p> <p>Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持键到五种数据类型的映射，（string、list、set、zset、hash）,而memecache只能支持简单的数据类型。另外redis可以完成一部份数据的持久化，而memecache完全将数据保存在内存中，不进行持久化，如果服务器出问题，数据将全部丢失，另外一个原因是redis底层实现优化比memecache好。另外采用了多路复用io阻塞机制，数据结构简单，操作节省时间。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220824/09e7d81dd6edd3b78a5a3195766ee6a5.jpg" alt="如何保证Redis缓存和数据库一致性？"></p> <p>那常见的保证缓存与数据库一致的方法有哪些呢？</p> <p>想要保证缓存与数据库的双写一致，一共有4种方式，即4种同步策略：<br /><strong>先更新缓存，再更新数据库；<br /> 先更新数据库，再更新缓存；<br /> 先删除缓存，再更新数据库；<br /> 先更新数据库，再删除缓存。</strong></p> <p>那么我们需要做的就是根据不同的场景来使用合理的方式来解决数据问题。</p> <p><strong>第一种：先删除缓存，再更新数据库</strong></p> <p>在出现失败时可能出现的问题：</p> <p>1：线程A删除缓存成功，线程A更新数据库失败；</p> <p>2 ：线程B从缓存中读取数据；由于缓存被删，进程B无法从缓存中得到数据，进而从数据库读取数据；此时数据库中的数据更新失败，线程B从数据库成功获取旧的数据，然后将数据更新到了缓存。<br /> 最终，缓存和数据库的数据是一致的，但仍然是旧的数据。</p> <p><strong>第二种：先更新数据库，再删除缓存</strong></p> <p>假设这会有两个请求，一个请求A做查询操作，一个请求B做更新操作，那么会有如下情形产生</p> <p>（1）缓存刚好失效<br /> （2）请求A查询数据库，得一个旧值<br /> （3）请求B将新值写入数据库<br /> （4）请求B删除缓存<br /> （5）请求A将查到的旧值写入缓存<br /> 如果发生上述情况，确实是会发生脏数据。<br /> 然而，发生这种情况的概率又有多少呢？<br /> 发生上述情况有一个先天性条件，就是步骤（3）的写数据库操作比步骤（2）的读数据库操作耗时更短，才有可能使得步骤（4）先于步骤（5）。<br /> 数据库的读操作的速度远快于写操作的（不然做读写分离干嘛，做读写分离的意义就是因为读操作比较快，耗资源少），因此步骤（3）耗时比步骤（2）更短，这一情形很难出现。<br /> 先更新数据库，再删缓存依然会有问题，不过，问题出现的可能性会因为上面说的原因，变得比较低。</p> <p><strong>第三种：给所有的缓存一个失效期</strong></p> <p>第三种方案可以说是一个大杀器，任何不一致，都可以靠失效期解决，失效期越短，数据一致性越高。但是失效期越短，查数据库就会越频繁。因此失效期应该根据业务来定。<br /> 1.并发不高的情况：<br /> 读: 读redis-&gt;没有，读mysql-&gt;把mysql数据写回redis，有的话直接从redis中取；<br /> 写: 写mysql-&gt;成功，再写redis；<br /> 2.并发高的情况：<br /> 读: 读redis-&gt;没有，读mysql-&gt;把mysql数据写回redis，有的话直接从redis中取；<br /> 写：异步话，先写入redis的缓存，就直接返回；定期或特定动作将数据保存到mysql，可以做到多次更新，一次保存；</p> <p><strong>第四种：加锁，使线程顺序执行</strong></p> <p>如果一个服务部署到了多个机器，就变成了分布式锁，或者是分布式队列按顺序去操作数据库或者 Redis，带来的副作用就是：数据库本来是并发的，现在变成串行的了，加锁或者排队执行的方案降低了系统性能，所以这个方案看起来不太可行。</p> <p><strong>第五种：采用双删</strong></p> <p>先删除缓存，再更新数据库，当更新数据后休眠一段时间再删除一次缓存。</p> <p>方案推荐两种：</p> <p>1：项目整合quartz等定时任务框架，去实现延时3–5s再去执行最后一步任务 。（推荐使用）<br /> 2：创建线程池，线程池中拿一个线程，线程体中延时3-5s再去执行最后一步任务（不能忘了启动线程）</p> <p><strong>第六种：异步更新缓存(基于订阅binlog的同步机制)</strong></p> <p>MySQL binlog增量订阅消费+消息队列+增量数据更新到redis读Redis</p> <p>热数据基本都在Redis写MySQL:增删改都是操作MySQL更新Redis数据：MySQ的数据操作binlog，来更新到Redis：</p> <p>1)数据操作主要分为两大块：一个是全量(将全部数据一次写入到redis)一个是增量(实时更新)。</p> <p>这里说的是增量,指的是mysql的update、insert、delate变更数据。</p> <p>2)读取binlog后分析 ，利用消息队列,推送更新各台的redis缓存数据。<br /> 这样一旦MySQL中产生了新的写入、更新、删除等操作，就可以把binlog相关的消息推送至Redis，Redis再根据binlog中的记录，对Redis进行更新。<br /> 其实这种机制，很类似MySQL的主从备份机制，因为MySQL的主备也是通过binlog来实现的数据一致性。<br /> 这里可以结合使用canal(阿里的一款开源框架)，通过该框架可以对MySQL的binlog进行订阅，而canal正是模仿了mysql的slave数据库的备份请求，使得Redis的数据更新达到了相同的效果。<br /> 当然，这里的消息推送工具你也可以采用别的第三方：kafka、rabbitMQ等来实现推送更新Redis。</p> <p>以上就是redis和数据库数据保持一致的方案。<br /><strong>微信搜索IT说说公众号，获取更多java技术资源！</strong></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-37558.htm">宠物买卖交易内容（宠物买卖交易内容怎么写）</a></p>
                                        <p>下一个：<a href="/news/article-38058.htm">数据结构 &#8211; 单链表 C++ 实现</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-3-trojan-node.htm" title="1月3日 | Free Trojan Node节点订阅每天更新18.5M/S免费节点订阅链接">1月3日 | Free Trojan Node节点订阅每天更新18.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-node-share-links.htm" title="12月14日 | Free Trojan Node节点订阅每天更新19.3M/S免费节点订阅链接">12月14日 | Free Trojan Node节点订阅每天更新19.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-21-latest-trojan-node.htm" title="10月21日 | Free Trojan Node节点订阅每天更新18M/S免费节点订阅链接">10月21日 | Free Trojan Node节点订阅每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-trojan-node-share.htm" title="12月23日 | Free Trojan Node节点订阅每天更新18.6M/S免费节点订阅链接">12月23日 | Free Trojan Node节点订阅每天更新18.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-38545.htm" title="DDT数据驱动性能测试(一)">DDT数据驱动性能测试(一)</a></li>
                        <li class="py-2"><a href="/news/article-35568.htm" title="python学习分享之垃圾回收-缓存机制">python学习分享之垃圾回收-缓存机制</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-trojan-windows.htm" title="12月26日 | Free Trojan Node节点订阅每天更新19.5M/S免费节点订阅链接">12月26日 | Free Trojan Node节点订阅每天更新19.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-node-share.htm" title="12月7日 | Free Trojan Node节点订阅每天更新23M/S免费节点订阅链接">12月7日 | Free Trojan Node节点订阅每天更新23M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20185.htm" title="妙三多疫苗多久生效（妙三多疫苗多久打一针）">妙三多疫苗多久生效（妙三多疫苗多久打一针）</a></li>
                        <li class="py-2"><a href="/news/article-26154.htm" title="关于VUE中组件之间传值以及调用方法汇总">关于VUE中组件之间传值以及调用方法汇总</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">32</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <a href="/">FreeTrojanNode免费节点官网</a> 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/freetrojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/freetrojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>