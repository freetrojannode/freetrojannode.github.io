<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freetrojannode.github.io/news/article-110616.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>dubbo发送过程编码失败，会唤醒发送线程吗？_在线工具</title>
        <meta name="description" content="dubbo发送过程编码失败，会唤醒发送(客户端业务)线程吗？如何实现的？ 在上篇文章 dubbo坑- No provider available for the service xxx 中，如果dub" />
        <link rel="icon" href="/assets/website/img/freetrojannode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeTrojanNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freetrojannode.github.io/news/article-110616.htm" />
    <meta property="og:site_name" content="FreeTrojanNode免费节点官网" />
    <meta property="og:title" content="dubbo发送过程编码失败，会唤醒发送线程吗？_在线工具" />
    <meta property="og:image" content="https://freetrojannode.github.io/uploads/20240807-1/96909bd57d5e85f587b37a0e1a763b95.webp" />
        <meta property="og:release_date" content="2025-05-03T10:29:06" />
    <meta property="og:updated_time" content="2025-05-03T10:29:06" />
        <meta property="og:description" content="dubbo发送过程编码失败，会唤醒发送(客户端业务)线程吗？如何实现的？ 在上篇文章 dubbo坑- No provider available for the service xxx 中，如果dub" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="dubbo发送过程编码失败，会唤醒发送线程吗？_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Montserrat:300,400,500,700" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/freetrojannode/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freetrojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freetrojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freetrojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freetrojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/freetrojannode/style.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-41Z5LWRP31"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-41Z5LWRP31');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top d-flex align-items-center">
        <div class="container d-flex justify-content-between">
            <div class="logo">
                <a href="/">
                                <span>Free Trojan Node</span>
                                </a>
            </div>
            <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- #header -->
    <main id="main">
        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>dubbo发送过程编码失败，会唤醒发送线程吗？_在线工具</h1>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs Section -->
        <!-- ======= About Section ======= -->
        <section id="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="TrojanNode免费节点官网" data-url="https://trojannode.github.io">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<p>dubbo发送过程编码失败，会唤醒发送(客户端业务)线程吗？如何实现的？</p> <p>在上篇文章 dubbo坑- No provider available for the service xxx 中，如果dubbo请求阶段，编码异常，而业务线程依然在等待响应，dubbo如何处理的？总不能等待超时，响应个超时异常吧，这不合理，接下来看dubbo编码异常，如何处理的</p> <p>回顾下之前自己分析的dubbo transport层记录，详细记录了dubbo调用链路(包括netty channelhandler chain，dubbo channelhandler chain)的执行，在简单回顾下：</p> <p>客户端发送：此时是在业务线程执行，客户端业务线程依次执行 InvokerInvocationHandler入口 -&gt; RegistryDirectory获取服务集合 -&gt; tagRouter过滤 -&gt; 负载均衡选取一个Invoker -&gt; dubbo consumer filter chain -&gt; DubboInvoker执行调用invoke -&gt; Exchange层封装请求模型Request且创建DefaultFuture并阻塞等待 -&gt; 网络客户端NettyClient发送消息 -&gt; dubbo Channel即NettyChannel发送  -&gt; 调用netty channle发送 io.netty.channel.Channel.writeAndFlush(message)，接着触发执行netty pipeline的outbound事件，执行顺序TailContext-&gt;NettyClientHandler-&gt;InternalEncoder-&gt;InternalDecoder-&gt;HeadContext，其中在TailContext内由业务线程切换到reactor IO线程，接着InternalEncoder进行编码，最终由HeadContext把数据发送给服务方；</p> <p>客户端接收服务端响应：reactor IO线程监听到selector有read事件，执行processSelectedKeys()，触发执行netty pipeline的inbound事件，执行顺序【HeadContext-&gt;InternalDecoder-&gt;InternalEncoder-&gt;NettyClientHandler-&gt;TailContext】，由InternalDecoder解码，接着在NettyClientHandler#channelRead执行，NettyClientHandler持有dubbo channelhandler chain，因此链式执行dubbo channelhandler chain，即NettyClient-&gt;MultiMessageHandler-&gt;HeartbeatHandler-&gt;AllChannelHandler-&gt;DecodeHandler-&gt;HeaderExchangeHandler-&gt;DubboProtocol$1，这里重要的是在AllChannelHandler内由IO线程切换到业务线程（封装响应Response为ChannelEventRunnable，提交到dubbo业务线程池），接着在业务线程上HeaderExchangeHandler判断mesage是Response，处理响应，唤醒DefaultFuture的阻塞等待。</p> <p>接着客户端业务线程被唤醒，根据Response内容处理，获取返回的数据结果/异常。</p> <p>以上就是dubbo整个发送-响应的整个流程，重点是netty pipeline和dubbo channelhandler chain，都是责任链模式增加功能。</p> <p>接着分析我们这个问题，从上面回顾的流程可知，未实现序列化，那么异常肯定发生在dubbo编码阶段，即InternalEncoder抛出异常，异常是java.lang.RuntimeException，异常信息<code>Serialized class com.zzz.ioc.codec.util.KeyValuePair must implement java.io.Serializable Java field: private com.zzz.ioc.codec.util.KeyValuePair com.zzz.ioc.protocol.t808.T0900.message</code>，异常封装在netty DefaultChannelPromise，因此在NettyClientHandler获取InternalEncoder.write结果(此过程在IO线程执行)，判断是否有无异常，代码如下</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220505/57449c5a9c648553b69f31a7846e3b26.jpg" alt="dubbo发送过程编码失败，会唤醒发送线程吗？_在线工具"></p> <p>消息发送有异常，则mock response返回，接着执行NettyClientHandler持有的dubbo channelhandler chain[NettyClient-&gt;MultiMessageHandler-&gt;HeartbeatHandler-&gt;AllChannelHandler-&gt;DecodeHandler-&gt;HeaderExchangeHandler-&gt;DubboProtocol$1]，AllChannelHandler执行，IO线程切换到业务线程(dubbo客户端线程池，线程名称DubboClientHandler-开头)，接着业务线程上执行HeaderExchangeHandler，处理response，唤醒发送等待线程。此过程为了避免write操作失败，mock Request，然后和正常接收响应基本一样的处理方式(不同之处是不经过selector的processSelectedKeys())唤醒发送线程。通信框架出现这个问题也不容易，但是dubbo设计的非常巧妙。</p> <p>小结：</p> <p>回答前面提问</p> <p>1.dubbo发送过程编码失败，会唤醒发送线程吗？</p> <p>会唤醒发送线程，否则发送线程就是timeout异常，实际并没有。</p> <p>如何实现的？</p> <p>发送异常，比如编码异常，NettyClientHandler 进行mock response，接着和正常处理响应基本相同方式，触发NettyClientHandler 持有的dubbo channelhandler chain，由AllChannelHandler封装响应Response为ChannelEventRunnable，提交到dubbo业务线程池(cache线程池，线程名<code>DubboClientHandler-</code>开头)，线程由IO线程切换到dubbo业务线程执行Exchange，即HeaderExchangeHandler处理response，继而唤醒发送线程，最后发送(客户端业务)线程处理响应业务逻辑。</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-110615.htm">docker故障大全</a></p>
                                        <p>下一个：<a href="/news/article-111427.htm">vscode for c/c++（ACM配置）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-107274.htm" title="开宠物店坑在哪?（开宠物店的坑）">开宠物店坑在哪?（开宠物店的坑）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-5-5-trojan-node-github.htm" title="5月5日 | Free Trojan Node节点订阅每天更新20.3M/S免费节点订阅链接">5月5日 | Free Trojan Node节点订阅每天更新20.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-109733.htm" title="打过疫苗的猫抓了一下出了点血要打疫苗吗（打过疫苗的猫抓了一下出了点血要打疫苗吗有事吗）">打过疫苗的猫抓了一下出了点血要打疫苗吗（打过疫苗的猫抓了一下出了点血要打疫苗吗有事吗）</a></li>
                        <li class="py-2"><a href="/news/article-106290.htm" title="Python语法学习之进程池与进程锁详解_python_">Python语法学习之进程池与进程锁详解_python_</a></li>
                        <li class="py-2"><a href="/news/article-90881.htm" title="动物防疫站营业时间是几点 动物防疫站营业时间是几点到几点">动物防疫站营业时间是几点 动物防疫站营业时间是几点到几点</a></li>
                        <li class="py-2"><a href="/news/article-96438.htm" title="宠物领养的软件（宠物领养的平台）">宠物领养的软件（宠物领养的平台）</a></li>
                        <li class="py-2"><a href="/news/article-105467.htm" title="全国知名兽药厂（全国知名兽药厂家排行榜）">全国知名兽药厂（全国知名兽药厂家排行榜）</a></li>
                        <li class="py-2"><a href="/news/article-87512.htm" title="国产品牌十大宠物食品排行榜前十名（国内十大宠物食品品牌）">国产品牌十大宠物食品排行榜前十名（国内十大宠物食品品牌）</a></li>
                        <li class="py-2"><a href="/news/article-97893.htm" title="数据库基础知识详解四：存储过程、视图、游标、SQL语句优化以及索引">数据库基础知识详解四：存储过程、视图、游标、SQL语句优化以及索引</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-30-trojan-node-github.htm" title="4月30日 | Free Trojan Node节点订阅每天更新21.5M/S免费节点订阅链接">4月30日 | Free Trojan Node节点订阅每天更新21.5M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">13</span> <a href="/date/2025-05/" title="2025-05 归档">2025-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container">
            <div class="copyright">
                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                <a href="/">FreeTrojanNode免费节点官网</a> 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/freetrojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/freetrojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/freetrojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>